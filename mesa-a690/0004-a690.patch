diff --git a/src/freedreno/common/freedreno_devices.py b/src/freedreno/common/freedreno_devices.py
index cb507146f42..2fe61c4df64 100644
--- a/src/freedreno/common/freedreno_devices.py
+++ b/src/freedreno/common/freedreno_devices.py
@@ -108,19 +108,15 @@ class A6xxGPUInfo(GPUInfo):
        into distinct sub-generations.  The template parameter avoids
        duplication of parameters that are unique to the sub-generation.
     """
-    def __init__(self, template, num_sp_cores, num_ccu, magic_regs):
+    def __init__(self, template, num_ccu_x, num_ccu_y, magic_regs):
         super().__init__(gmem_align_w = 16, gmem_align_h = 4,
-                         tile_align_w = 32, tile_align_h = 32,
+                         tile_align_w = 32 * num_ccu_x,
+                         tile_align_h = 16 * num_ccu_y,
                          tile_max_w   = 1024, # max_bitfield_val(5, 0, 5)
                          tile_max_h   = max_bitfield_val(14, 8, 4),
                          num_vsc_pipes = 32)
-        assert(num_sp_cores == num_ccu)
 
-        self.num_sp_cores = num_sp_cores
-
-        # 96 tile alignment seems correlated to 3 CCU
-        if num_ccu == 3:
-            self.tile_align_w = 96
+        self.num_ccu = num_ccu_x * num_ccu_y
 
         self.a6xx = Struct()
         self.a6xx.magic = Struct()
@@ -271,8 +267,8 @@ add_gpus([
         GPUId(619),
     ], A6xxGPUInfo(
         a6xx_gen1,
-        num_sp_cores = 1,
-        num_ccu = 1,
+        num_ccu_x = 1,
+        num_ccu_y = 1,
         magic_regs = dict(
             PC_POWER_CNTL = 0,
             TPL1_DBG_ECO_CNTL = 0x00108000,
@@ -293,8 +289,8 @@ add_gpus([
         GPUId(620),
     ], A6xxGPUInfo(
         a6xx_gen1,
-        num_sp_cores = 1,
-        num_ccu = 1,
+        num_ccu_x = 1,
+        num_ccu_y = 1,
         magic_regs = dict(
             PC_POWER_CNTL = 0,
             TPL1_DBG_ECO_CNTL = 0x01008000,
@@ -315,8 +311,8 @@ add_gpus([
         GPUId(630),
     ], A6xxGPUInfo(
         a6xx_gen1,
-        num_sp_cores = 2,
-        num_ccu = 2,
+        num_ccu_x = 2,
+        num_ccu_y = 1,
         magic_regs = dict(
             PC_POWER_CNTL = 1,
             TPL1_DBG_ECO_CNTL = 0x00108000,
@@ -337,8 +333,8 @@ add_gpus([
         GPUId(640),
     ], A6xxGPUInfo(
         a6xx_gen2,
-        num_sp_cores = 2,
-        num_ccu = 2,
+        num_ccu_x = 2,
+        num_ccu_y = 1,
         magic_regs = dict(
             PC_POWER_CNTL = 1,
             TPL1_DBG_ECO_CNTL = 0x00008000,
@@ -359,8 +355,8 @@ add_gpus([
         GPUId(680),
     ], A6xxGPUInfo(
         a6xx_gen2,
-        num_sp_cores = 4,
-        num_ccu = 4,
+        num_ccu_x = 2,
+        num_ccu_y = 2,
         magic_regs = dict(
             PC_POWER_CNTL = 3,
             TPL1_DBG_ECO_CNTL = 0x00108000,
@@ -381,8 +377,8 @@ add_gpus([
         GPUId(650),
     ], A6xxGPUInfo(
         a6xx_gen3,
-        num_sp_cores = 3,
-        num_ccu = 3,
+        num_ccu_x = 3,
+        num_ccu_y = 1,
         magic_regs = dict(
             PC_POWER_CNTL = 2,
             # this seems to be a chicken bit that fixes cubic filtering:
@@ -408,8 +404,8 @@ add_gpus([
         GPUId(chip_id=0xffff06030500, name="Adreno 7c+ Gen 3"),
     ], A6xxGPUInfo(
         a6xx_gen4,
-        num_sp_cores = 2,
-        num_ccu = 2,
+        num_ccu_x = 2,
+        num_ccu_y = 1,
         magic_regs = dict(
             PC_POWER_CNTL = 1,
             TPL1_DBG_ECO_CNTL = 0x05008000,
@@ -430,8 +426,8 @@ add_gpus([
         GPUId(660),
     ], A6xxGPUInfo(
         a6xx_gen4,
-        num_sp_cores = 3,
-        num_ccu = 3,
+        num_ccu_x = 3,
+        num_ccu_y = 1,
         magic_regs = dict(
             PC_POWER_CNTL = 2,
             TPL1_DBG_ECO_CNTL = 0x05008000,
@@ -448,6 +444,29 @@ add_gpus([
         )
     ))
 
+add_gpus([
+        GPUId(690),
+    ], A6xxGPUInfo(
+        a6xx_gen4,
+        num_ccu_x = 4,
+        num_ccu_y = 2,
+        magic_regs = dict(
+            PC_POWER_CNTL = 7,
+            TPL1_DBG_ECO_CNTL = 0x01008000,
+            GRAS_DBG_ECO_CNTL = 0x0,
+            SP_CHICKEN_BITS = 0x00001400,
+            UCHE_CLIENT_PF = 0x00000084,
+            PC_MODE_CNTL = 0x1f,
+            SP_DBG_ECO_CNTL = 0x00000000,
+            # RB_DBG_ECO_CNTL = 0x00100000,
+            RB_DBG_ECO_CNTL_blit = 0x00100000,  # ???
+            HLSQ_DBG_ECO_CNTL = 0x0,
+            RB_UNKNOWN_8E01 = 0x0,
+            VPC_DBG_ECO_CNTL = 0x02000000,
+            UCHE_UNKNOWN_0E12 = 0x00000001
+        )
+    ))
+
 template = """\
 /* Copyright (C) 2021 Google, Inc.
  *
diff --git a/src/gallium/drivers/freedreno/freedreno_gmem.c b/src/gallium/drivers/freedreno/freedreno_gmem.c
index 70747d9549d..bc08624308f 100644
--- a/src/gallium/drivers/freedreno/freedreno_gmem.c
+++ b/src/gallium/drivers/freedreno/freedreno_gmem.c
@@ -530,7 +530,7 @@ gmem_key_init(struct fd_batch *batch, bool assume_zs, bool no_scis_opt)
        */
       key->gmem_page_align = 8;
    } else if (is_a6xx(screen)) {
-      key->gmem_page_align = (screen->info->tile_align_w == 96) ? 3 : 1;
+      key->gmem_page_align = screen->info->num_ccu;
    } else {
       // TODO re-check this across gens.. maybe it should only
       // be a single page in some cases:
